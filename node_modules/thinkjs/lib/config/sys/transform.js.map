{"version":3,"sources":["../../../src/config/sys/transform.js"],"names":["getFn","value","config","think","isFunction","global","msg","locale","Error","post","json_content_type","isString","isArray","subdomain","obj","forEach","item","isObject","deny_module_list","output_content","create_server","cache","type","toLowerCase","session"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;AAMA,IAAIA,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7B,MAAI,CAACD,KAAD,IAAUE,MAAMC,UAAN,CAAiBH,KAAjB,CAAd,EAAuC;AACrC,WAAOA,KAAP;AACD;AACDA,UAAQI,OAAOJ,KAAP,CAAR;AACA,MAAIE,MAAMC,UAAN,CAAiBH,KAAjB,CAAJ,EAA6B;AAC3B,WAAOA,KAAP;AACD;AACD,MAAIK,MAAMH,MAAMI,MAAN,CAAa,qBAAb,EAAoCL,MAApC,CAAV;AACA,QAAM,IAAIM,KAAJ,CAAUF,GAAV,CAAN;AACD,CAVD;AAWA;;;;kBAIe;AACbG,QAAM;AACJ;;;;;AAKAC,uBAAmB,kCAAS;AAC1B,UAAIP,MAAMQ,QAAN,CAAeV,KAAf,CAAJ,EAA2B;AACzB,eAAO,CAACA,KAAD,CAAP;AACD;AACD,UAAI,CAACE,MAAMS,OAAN,CAAcX,KAAd,CAAL,EAA2B;AACzB,YAAIK,MAAMH,MAAMI,MAAN,CAAa,kBAAb,EAAiC,wBAAjC,CAAV;AACA,cAAM,IAAIC,KAAJ,CAAUF,GAAV,CAAN;AACD;AACD,aAAOL,KAAP;AACD;AAfG,GADO;AAkBb;;;;;AAKAY,aAAW,0BAAS;AAClB,QAAIV,MAAMQ,QAAN,CAAeV,KAAf,CAAJ,EAA2B;AACzB,aAAO,EAACA,YAAD,EAAP;AACD;AACD,QAAIE,MAAMS,OAAN,CAAcX,KAAd,CAAJ,EAA0B;AAAA;AACxB,YAAIa,MAAM,EAAV;AACAb,cAAMc,OAAN,CAAc,gBAAQ;AACpBD,cAAIE,IAAJ,IAAYA,IAAZ;AACD,SAFD;AAGA;AAAA,aAAOF;AAAP;AALwB;;AAAA;AAMzB;AACD,QAAI,CAACX,MAAMc,QAAN,CAAehB,KAAf,CAAL,EAA4B;AAC1B,UAAIK,MAAMH,MAAMI,MAAN,CAAa,kBAAb,EAAiC,WAAjC,CAAV;AACA,YAAM,IAAIC,KAAJ,CAAUF,GAAV,CAAN;AACD;AACD,WAAOL,KAAP;AACD,GAvCY;AAwCb;;;;;AAKAiB,oBAAkB,iCAAS;AACzB,QAAIf,MAAMQ,QAAN,CAAeV,KAAf,CAAJ,EAA2B;AACzB,aAAO,CAACA,KAAD,CAAP;AACD;AACD,QAAI,CAACE,MAAMS,OAAN,CAAcX,KAAd,CAAL,EAA2B;AACzB,UAAIK,MAAMH,MAAMI,MAAN,CAAa,kBAAb,EAAiC,kBAAjC,CAAV;AACA,YAAM,IAAIC,KAAJ,CAAUF,GAAV,CAAN;AACD;AACD,WAAOL,KAAP;AACD,GAtDY;AAuDb;;;;;AAKAkB,kBAAgB;AAAA,WAASnB,MAAMC,KAAN,EAAa,gBAAb,CAAT;AAAA,GA5DH;AA6Db;;;;;AAKAmB,iBAAe;AAAA,WAASpB,MAAMC,KAAN,EAAa,eAAb,CAAT;AAAA,GAlEF;AAmEb;;;;AAIAoB,SAAO;AACLC,UAAM;AAAA,aAASrB,MAAMsB,WAAN,EAAT;AAAA;AADD,GAvEM;AA0Eb;;;;AAIAC,WAAS;AACPF,UAAM;AAAA,aAASrB,MAAMsB,WAAN,EAAT;AAAA;AADC;AA9EI,C","file":"transform.js","sourcesContent":["'use strict';\n\n/**\n * get function\n * @param  {mixed} value  []\n * @param  {String} config []\n * @return {}        []\n */\nlet getFn = (value, config) => {\n  if (!value || think.isFunction(value)) {\n    return value;\n  }\n  value = global[value];\n  if (think.isFunction(value)) {\n    return value;\n  }\n  let msg = think.locale('CONFIG_NOT_FUNCTION', config);\n  throw new Error(msg);\n};\n/**\n * config transform\n * @type {Object}\n */\nexport default {\n  post: {\n    /**\n     * json content type list\n     * @param  {Array} value []\n     * @return {Array}       []\n     */\n    json_content_type: value => {\n      if (think.isString(value)) {\n        return [value];\n      }\n      if (!think.isArray(value)) {\n        let msg = think.locale('CONFIG_NOT_VALID', 'post.json_content_type');\n        throw new Error(msg);\n      }\n      return value;\n    }\n  },\n  /**\n   * sub doamin deploy\n   * @param  {Object} value []\n   * @return {Object}       []\n   */\n  subdomain: value => {\n    if (think.isString(value)) {\n      return {value};\n    }\n    if (think.isArray(value)) {\n      let obj = {};\n      value.forEach(item => {\n        obj[item] = item;\n      });\n      return obj;\n    }\n    if (!think.isObject(value)) {\n      let msg = think.locale('CONFIG_NOT_VALID', 'subdomain');\n      throw new Error(msg);\n    }\n    return value;\n  },\n  /**\n   * deby module list\n   * @param  {Array} value []\n   * @return {Array}       []\n   */\n  deny_module_list: value => {\n    if (think.isString(value)) {\n      return [value];\n    }\n    if (!think.isArray(value)) {\n      let msg = think.locale('CONFIG_NOT_VALID', 'deny_module_list');\n      throw new Error(msg);\n    }\n    return value;\n  },\n  /**\n   * output content\n   * @param  {String} value []\n   * @return {Function}       []\n   */\n  output_content: value => getFn(value, 'output_content'),\n  /**\n   * create server\n   * @param  {String} value []\n   * @return {Function}       []\n   */\n  create_server: value => getFn(value, 'create_server'),\n  /**\n   * cache config\n   * @type {Object}\n   */\n  cache: {\n    type: value => value.toLowerCase()\n  },\n  /**\n   * session config\n   * @type {Object}\n   */\n  session: {\n    type: value => value.toLowerCase()\n  }\n};"]}