{"version":3,"sources":["../../../src/config/locale/en.js"],"names":["CONTROLLER_NOT_FOUND","CONTROLLER_INVALID","ACTION_NOT_FOUND","ACTION_INVALID","WORKER_DIED","MIDDLEWARE_NOT_FOUND","ADAPTER_NOT_FOUND","GCTYPE_MUST_SET","CONFIG_NOT_FUNCTION","CONFIG_NOT_VALID","PATH_EMPTY","PATH_NOT_EXIST","TEMPLATE_NOT_EXIST","PARAMS_EMPTY","PARAMS_NOT_VALID","FIELD_KEY_NOT_VALID","DATA_EMPTY","MISS_WHERE_CONDITION","INVALID_WHERE_CONDITION_KEY","WHERE_CONDITION_INVALID","TABLE_NO_COLUMNS","NOT_SUPPORT_TRANSACTION","DATA_MUST_BE_ARRAY","PARAMS_TYPE_INVALID","DISALLOW_PORT","SERVICE_UNAVAILABLE","URL_HAS_UPPERCASE","METHOD_NOT_ALLOWED","METHOD_NOT_EXIST","validate_required","validate_contains","validate_equals","validate_different","validate_after","validate_alpha","validate_alphaDash","validate_alphaNumeric","validate_alphaNumericDash","validate_ascii","validate_base64","validate_before","validate_byteLength","validate_creditcard","validate_currency","validate_date","validate_decimal","validate_divisibleBy","validate_email","validate_fqdn","validate_float","validate_fullWidth","validate_halfWidth","validate_hexColor","validate_hex","validate_ip","validate_ip4","validate_ip6","validate_isbn","validate_isin","validate_iso8601","validate_in","validate_notIn","validate_int","validate_min","validate_max","validate_length","validate_minLength","validate_maxLength","validate_lowercase","validate_mobile","validate_mongoId","validate_multibyte","validate_url","validate_uppercase","validate_variableWidth","validate_order","validate_field","validate_image","validate_startWith","validate_endWidth","validate_string","validate_array","validate_boolean","validate_object"],"mappings":";;;AAAA;;;;kBAIe;AACbA,wBAAsB,yCADT;AAEbC,sBAAoB,2CAFP;AAGbC,oBAAkB,oCAHL;AAIbC,kBAAgB,uCAJH;AAKbC,eAAa,yCALA;AAMbC,wBAAsB,2BANT;AAObC,qBAAmB,wBAPN;AAQbC,mBAAiB,oCARJ;AASbC,uBAAqB,+BATR;AAUbC,oBAAkB,0BAVL;AAWbC,cAAY,uBAXC;AAYbC,kBAAgB,mBAZH;AAabC,sBAAoB,gCAbP;AAcbC,gBAAc,gCAdD;AAebC,oBAAkB,iCAfL;AAgBbC,uBAAqB,4CAhBR;AAiBbC,cAAY,uBAjBC;AAkBbC,wBAAsB,sBAlBT;AAmBbC,+BAA6B,kCAnBhB;AAoBbC,2BAAyB,wCApBZ;AAqBbC,oBAAkB,2BArBL;AAsBbC,2BAAyB,yCAtBZ;AAuBbC,sBAAoB,2BAvBP;AAwBbC,uBAAqB,8BAxBR;AAyBbC,iBAAe,kCAzBF;AA0BbC,uBAAqB,qBA1BR;AA2BbC,qBAAmB,oDA3BN;AA4BbC,sBAAoB,gCA5BP;AA6BbC,oBAAkB,qBA7BL;;AA+BbC,qBAAmB,yBA/BN;AAgCbC,qBAAmB,6BAhCN;AAiCbC,mBAAiB,0BAjCJ;AAkCbC,sBAAoB,8BAlCP;AAmCbC,kBAAgB,+DAnCH;AAoCbC,kBAAgB,4CApCH;AAqCbC,sBAAoB,uDArCP;AAsCbC,yBAAuB,0DAtCV;AAuCbC,6BAA2B,iEAvCd;AAwCbC,kBAAgB,uCAxCH;AAyCbC,mBAAiB,oCAzCJ;AA0CbC,mBAAiB,gEA1CJ;AA2CbC,uBAAqB,+CA3CR;AA4CbC,uBAAqB,iCA5CR;AA6CbC,qBAAmB,qCA7CN;AA8CbC,iBAAe,oBA9CF;AA+CbC,oBAAkB,8BA/CL;AAgDbC,wBAAsB,kDAhDT;AAiDbC,kBAAgB,sBAjDH;AAkDbC,iBAAe,2CAlDF;AAmDbC,kBAAgB,+BAnDH;AAoDbC,sBAAoB,2CApDP;AAqDbC,sBAAoB,2CArDP;AAsDbC,qBAAmB,iCAtDN;AAuDbC,gBAAc,kCAvDD;AAwDbC,eAAa,oCAxDA;AAyDbC,gBAAc,+BAzDD;AA0DbC,gBAAc,+BA1DD;AA2DbC,iBAAe,wCA3DF;AA4DbC,iBAAe,iDA5DF;AA6DbC,oBAAkB,mCA7DL;AA8DbC,eAAa,mCA9DA;AA+DbC,kBAAgB,uCA/DH;AAgEbC,gBAAc,wBAhED;AAiEbC,gBAAc,4CAjED;AAkEbC,gBAAc,yCAlED;AAmEbC,mBAAiB,oCAnEJ;AAoEbC,sBAAoB,uCApEP;AAqEbC,sBAAoB,uCArEP;AAsEbC,sBAAoB,0BAtEP;AAuEbC,mBAAiB,sCAvEJ;AAwEbC,oBAAkB,yEAxEL;AAyEbC,sBAAoB,kDAzEP;AA0EbC,gBAAc,oBA1ED;AA2EbC,sBAAoB,uBA3EP;AA4EbC,0BAAwB,6DA5EX;AA6EbC,kBAAgB,sCA7EH;AA8EbC,kBAAgB,sCA9EH;AA+EbC,kBAAgB,gCA/EH;AAgFbC,sBAAoB,+BAhFP;AAiFbC,qBAAmB,6BAjFN;AAkFbC,mBAAiB,sBAlFJ;AAmFbC,kBAAgB,sBAnFH;AAoFbC,oBAAkB,uBApFL;AAqFbC,mBAAiB;AArFJ,C","file":"en.js","sourcesContent":["/**\n * error message\n * @type {Object}\n */\nexport default {\n  CONTROLLER_NOT_FOUND: 'controller `%s` not found. url is `%s`.',\n  CONTROLLER_INVALID: 'controller `%s` is not valid. url is `%s`',\n  ACTION_NOT_FOUND: 'action `%s` not found. url is `%s`',\n  ACTION_INVALID: 'action `%s` is not valid. url is `%s`',\n  WORKER_DIED: 'worker `%d` died, it will auto restart.',\n  MIDDLEWARE_NOT_FOUND: 'middleware `%s` not found',\n  ADAPTER_NOT_FOUND: 'adapter `%s` not found',\n  GCTYPE_MUST_SET: 'instance must have gcType property',\n  CONFIG_NOT_FUNCTION: 'config `%s` is not a function',\n  CONFIG_NOT_VALID: 'config `%s` is not valid',\n  PATH_EMPTY: '`%s` path muse be set',\n  PATH_NOT_EXIST: '`%s` is not exist',\n  TEMPLATE_NOT_EXIST: 'can\\'t find template file `%s`',\n  PARAMS_EMPTY: 'params `%s` value can\\'t empty',\n  PARAMS_NOT_VALID: 'params `{name}` value not valid',\n  FIELD_KEY_NOT_VALID: 'field `%s` in where condition is not valid',\n  DATA_EMPTY: 'data can not be empty',\n  MISS_WHERE_CONDITION: 'miss where condition',\n  INVALID_WHERE_CONDITION_KEY: 'where condition key is not valid',\n  WHERE_CONDITION_INVALID: 'where condition `%s`:`%s` is not valid',\n  TABLE_NO_COLUMNS: 'table `%s` has no columns',\n  NOT_SUPPORT_TRANSACTION: 'table engine is not support transaction',\n  DATA_MUST_BE_ARRAY: 'data is not an array list',\n  PARAMS_TYPE_INVALID: 'params `{name}` type invalid',\n  DISALLOW_PORT: 'proxy on, cannot visit with port',\n  SERVICE_UNAVAILABLE: 'Service Unavailable',\n  URL_HAS_UPPERCASE: 'url has uppercases(%s), auto convert to lowercase.',\n  METHOD_NOT_ALLOWED: 'request method is not allowed.',\n  METHOD_NOT_EXIST: 'method %s not exist',\n\n  validate_required: '{name} can not be blank',\n  validate_contains: '{name} need contains {args}',\n  validate_equals: '{name} need match {args}',\n  validate_different: '{name} need not match {args}',\n  validate_after: '{name} need a date that\\'s after the {args} (defaults to now)',\n  validate_alpha: '{name} need contains only letters (a-zA-Z)',\n  validate_alphaDash: '{name} need contains only letters and dashes(a-zA-Z_)',\n  validate_alphaNumeric: '{name} need contains only letters and numeric(a-zA-Z0-9)',\n  validate_alphaNumericDash: '{name} need contains only letters, numeric and dash(a-zA-Z0-9_)',\n  validate_ascii: '{name} need contains ASCII chars only',\n  validate_base64: '{name} need a valid base64 encoded',\n  validate_before: '{name} need a date that\\'s before the {args} (defaults to now)',\n  validate_byteLength: '{name} need length (in bytes) falls in {args}',\n  validate_creditcard: '{name} need a valid credit card',\n  validate_currency: '{name} need a valid currency amount',\n  validate_date: '{name} need a date',\n  validate_decimal: '{name} need a decimal number',\n  validate_divisibleBy: '{name} need a number that\\'s divisible by {args}',\n  validate_email: '{name} need an email',\n  validate_fqdn: '{name} need a fully qualified domain name',\n  validate_float: '{name} need a float in {args}',\n  validate_fullWidth: '{name} need contains any full-width chars',\n  validate_halfWidth: '{name} need contains any half-width chars',\n  validate_hexColor: '{name} need a hexadecimal color',\n  validate_hex: '{name} need a hexadecimal number',\n  validate_ip: '{name} need an IP (version 4 or 6)',\n  validate_ip4: '{name} need an IP (version 4)',\n  validate_ip6: '{name} need an IP (version 6)',\n  validate_isbn: '{name} need an ISBN (version 10 or 13)',\n  validate_isin: '{name} need an ISIN (stock/security identifier)',\n  validate_iso8601: '{name} need a valid ISO 8601 date',\n  validate_in: '{name} need in an array of {args}',\n  validate_notIn: '{name} need not in an array of {args}',\n  validate_int: '{name} need an integer',\n  validate_min: '{name} need an integer greater than {args}',\n  validate_max: '{name} need an integer less than {args}',\n  validate_length: '{name} need length falls in {args}',\n  validate_minLength: '{name} need length is max than {args}',\n  validate_maxLength: '{name} need length is min than {args}',\n  validate_lowercase: '{name} need is lowercase',\n  validate_mobile: '{name} need is a mobile phone number',\n  validate_mongoId: '{name} need is a valid hex-encoded representation of a MongoDB ObjectId',\n  validate_multibyte: '{name} need contains one or more multibyte chars',\n  validate_url: '{name} need an URL',\n  validate_uppercase: '{name} need uppercase',\n  validate_variableWidth: '{name} need contains a mixture of full and half-width chars',\n  validate_order: '{name} need a valid sql order string',\n  validate_field: '{name} need a valid sql field string',\n  validate_image: '{name} need a valid image file',\n  validate_startWith: '{name} need start with {args}',\n  validate_endWidth: '{name} need end with {args}',\n  validate_string: '{name} need a string',\n  validate_array: '{name} need an array',\n  validate_boolean: '{name} need a boolean',\n  validate_object: '{name} need an object'\n};"]}