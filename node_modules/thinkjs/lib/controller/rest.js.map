{"version":3,"sources":["../../src/controller/rest.js"],"names":["init","http","_isRest","_method","resource","getResource","id","getId","modelInstance","model","filename","__filename","last","lastIndexOf","sep","substr","length","get","think","isString","isNumber","pathname","split","slice","getAction","data","getPk","pk","where","find","success","select","postAction","post","isEmpty","fail","add","insertId","deleteAction","delete","rows","affectedRows","putAction","update","__call","locale","action","url","controller","base"],"mappings":"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","file":"rest.js","sourcesContent":["'use strict';\n\nimport path from 'path';\n\n/**\n * REST Base Controller\n * @return {} []\n */\nexport default class extends think.controller.base {\n  /**\n   * init\n   * @param  {Object} http []\n   * @return {}      []\n   */\n  init(http){\n    super.init(http);\n    \n    this._isRest = true;\n    this._method = '';\n\n    this.resource = this.getResource();\n    this.id = this.getId();\n    this.modelInstance = this.model(this.resource);\n  }\n  /**\n   * get resource\n   * @return {String} [resource name]\n   */\n  getResource(){\n    let filename = this.__filename || __filename;\n    let last = filename.lastIndexOf(path.sep);\n    return filename.substr(last + 1, filename.length - last - 4);\n  }\n  /**\n   * get resource id\n   * @return {String} []\n   */\n  getId(){\n    let id = this.get('id');\n    if(id && think.isString(id) || think.isNumber(id)){\n      return id;\n    }\n    let last = this.http.pathname.split('/').slice(-1)[0];\n    if(last !== this.resource){\n      return last;\n    }\n    return '';\n  }\n  /**\n   * get resource\n   * @return {Promise} []\n   */\n  async getAction(){\n    let data;\n    if (this.id) {\n      let pk = await this.modelInstance.getPk();\n      data = await this.modelInstance.where({[pk]: this.id}).find();\n      return this.success(data);\n    }\n    data = await this.modelInstance.select();\n    return this.success(data);\n  }\n  /**\n   * put resource\n   * @return {Promise} []\n   */\n  async postAction(){\n    let pk = await this.modelInstance.getPk();\n    let data = this.post();\n    delete data[pk];\n    if(think.isEmpty(data)){\n      return this.fail('data is empty');\n    }\n    let insertId = await this.modelInstance.add(data);\n    return this.success({id: insertId});\n  }\n  /**\n   * delete resource\n   * @return {Promise} []\n   */\n  async deleteAction(){\n    if (!this.id) {\n      return this.fail('params error');\n    }\n    let pk = await this.modelInstance.getPk();\n    let rows = await this.modelInstance.where({[pk]: this.id}).delete();\n    return this.success({affectedRows: rows});\n  }\n  /**\n   * update resource\n   * @return {Promise} []\n   */\n  async putAction(){\n    if (!this.id) {\n      return this.fail('params error');\n    }\n    let pk = await this.modelInstance.getPk();\n    let data = this.post();\n    delete data[pk];\n    if (think.isEmpty(data)) {\n      return this.fail('data is empty');\n    }\n    let rows = await this.modelInstance.where({[pk]: this.id}).update(data);\n    return this.success({affectedRows: rows});\n  }\n  /**\n   * call\n   * @return {Promise} []\n   */\n  __call(){\n    return this.fail(think.locale('ACTION_INVALID', this.http.action, this.http.url));\n  }\n}"]}