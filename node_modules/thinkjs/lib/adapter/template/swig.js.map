{"version":3,"sources":["../../../src/adapter/template/swig.js"],"names":["run","templateFile","tVar","config","options","parseConfig","autoescape","think","npm","swig","setDefaults","prerender","tpl","compileFile"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;AAEA;;;;;;;;;;;;AAKE;;;;;;mBAMMA,G;2FAAIC,Y,EAAcC,I,EAAMC,M;;;;;;AAExBC,qB,GAAU,KAAKC,WAAL,CAAiB;AAC7BC,4BAAY;AADiB,eAAjB,EAEXH,MAFW,C;;qBAGGI,MAAMC,GAAN,CAAU,MAAV,C;;;AAAbC,kB;;;AAEJA,mBAAKC,WAAL,CAAiBN,OAAjB;AACA,mBAAKO,SAAL,CAAeP,OAAf,EAAwBK,IAAxB;;AAEIG,iB,GAAMH,KAAKI,WAAL,CAAiBZ,YAAjB,C;+CACHW,IAAIV,IAAJ,C","file":"swig.js","sourcesContent":["'use strict';\n\nimport Base from './base.js';\n\n/**\n * swig template\n * @type {Class}\n */\nexport default class extends Base {\n  /**\n   * run\n   * @param  {String} templateFile [template filepath]\n   * @param  {Object} tVar         [data]\n   * @return {String}              []\n   */\n  async run(templateFile, tVar, config){\n\n    let options = this.parseConfig({\n      autoescape: true\n    }, config);\n    let swig = await think.npm('swig');\n\n    swig.setDefaults(options);\n    this.prerender(options, swig);\n\n    let tpl = swig.compileFile(templateFile);\n    return tpl(tVar);\n  }\n}"]}