{"version":3,"sources":["../../../src/adapter/template/jade.js"],"names":["run","templateFile","tVar","config","options","parseConfig","filename","think","npm","jade","prerender","cache_compile","compile","thinkCache","VIEW_CONTENT","getContent","content"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;AAEA;;;;;;;;;;;;AAKE;;;;;;mBAMMA,G;2FAAIC,Y,EAAcC,I,EAAMC,M;;;;;;;AACxBC,qB,GAAU,KAAKC,WAAL,CAAiB;AAC7BC,0BAAUL;AADmB,eAAjB,EAEXE,MAFW,C;;qBAGGI,MAAMC,GAAN,CAAU,MAAV,C;;;AAAbC,kB;;;AAEJ,mBAAKC,SAAL,CAAeN,OAAf,EAAwBK,IAAxB;;mBAEIL,QAAQO,a;;;;;AACNC,sB,GAAUC,WAAWA,WAAWC,YAAtB,EAAoCb,eAAe,UAAnD,C;;mBACVW,Q;;;;;+CACKA,SAAQV,IAAR,C;;;;qBAIS,KAAKa,UAAL,CAAgBd,YAAhB,C;;;AAAhBe,qB;AACAJ,qB,GAAUH,KAAKG,OAAL,CAAaI,OAAb,EAAsBZ,OAAtB,C;;;AAEd,kBAAIA,QAAQO,aAAZ,EAA2B;AACzBE,2BAAWA,WAAWC,YAAtB,EAAoCb,eAAe,UAAnD,EAA+DW,OAA/D;AACD;;+CAEMA,QAAQV,IAAR,C","file":"jade.js","sourcesContent":["'use strict';\n\nimport Base from './base.js';\n\n/**\n * jade template\n * @type {Class}\n */\nexport default class extends Base {\n  /**\n   * run\n   * @param  {String} templateFile []\n   * @param  {Object} tVar         []\n   * @return {Promise}             []\n   */\n  async run(templateFile, tVar, config) {\n    let options = this.parseConfig({\n      filename: templateFile\n    }, config);\n    let jade = await think.npm('jade');\n\n    this.prerender(options, jade);\n\n    if (options.cache_compile) {\n      let compile = thinkCache(thinkCache.VIEW_CONTENT, templateFile + '-compile');\n      if (compile) {\n        return compile(tVar);\n      }\n    }\n\n    let content = await this.getContent(templateFile);\n    let compile = jade.compile(content, options);\n\n    if (options.cache_compile) {\n      thinkCache(thinkCache.VIEW_CONTENT, templateFile + '-compile', compile);\n    }\n\n    return compile(tVar);\n  }\n}"]}