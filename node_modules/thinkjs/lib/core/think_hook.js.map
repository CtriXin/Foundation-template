{"version":3,"sources":["../../src/core/think_hook.js"],"names":["Hook","args","name","http","data","length","thinkData","hook","think","isArray","isHttp","set","exec","hooks","flag","isFunction","mname","uuid","middleware","first","shift","oriHooks","concat","_execItemMiddleware","list","index","item","then","result","undefined","resolve"],"mappings":"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","file":"think_hook.js","sourcesContent":["'use strict';\n\n\n/**\n * regitster or exec hook\n * @param  {String} name []\n * @return {}      []\n */\nlet Hook = (...args) => {\n  let [name, http, data] = args;\n  //get hook data\n  if (args.length === 1) {\n    return thinkData.hook[name] || [];\n  }\n  //remove hook\n  if(http === null){\n    thinkData.hook[name] = [];\n    return;\n  }\n  // set hook data\n  // think.hook('test', ['middleware1', 'middleware2'])\n  if(think.isArray(http) || !think.isHttp(http)){\n    return Hook.set(name, http, data);\n  }\n  //exec hook\n  return Hook.exec(name, http, data);\n};\n\n/**\n * set hook\n * @return {} []\n */\nHook.set = (name, hooks, flag) => {\n  //think.hook.set('test', function or class)\n  if(think.isFunction(hooks)){\n    let mname = 'middleware_' + think.uuid();\n    think.middleware(mname, hooks);\n    hooks = [mname];\n  }\n  else if(!think.isArray(hooks)){\n    hooks = [hooks];\n  }\n  else{\n    let first = hooks[0];\n    if(first === 'append' || first === 'prepend'){\n      flag = hooks.shift();\n    }\n  }\n  let oriHooks = thinkData.hook[name] || [];\n  if(flag === 'append'){\n    oriHooks = oriHooks.concat(hooks);\n  }else if(flag === 'prepend'){\n    oriHooks = hooks.concat(oriHooks);\n  }else{\n    oriHooks = hooks;\n  }\n  thinkData.hook[name] = oriHooks;\n};\n\n/**\n * exec hook\n * @param  {String} name [hook name]\n * @param  {Object} http []\n * @param  {Mixed} data []\n * @return {Promise}      []\n */\n// think.hook.exec = async (name, http, data) => {\n//   //exec hook \n//   let list = thinkData.hook[name];\n//   if (!list || list.length === 0) {\n//     return Promise.resolve(data);\n//   }\n\n//   let length = list.length;\n//   for(let i = 0; i < length; i++){\n//     let result = await think.middleware.exec(list[i], http, data);\n//     //prevent next middlewares invoked in hook\n//     if(result === null){\n//       break;\n//     }else if (result !== undefined) {\n//       data = result;\n//     }\n//   }\n//   return data;\n// };\n\nlet _execItemMiddleware = (list, index, http, data) => {\n  let item = list[index];\n  if(!item){\n    return data;\n  }\n  return think.middleware.exec(item, http, data).then(result => {\n    if(result === null){\n      return data;\n    }else if(result !== undefined){\n      data = result;\n    }\n    return _execItemMiddleware(list, index + 1, http, data);\n  });\n};\n\nHook.exec = (name, http, data) => {\n  //exec hook \n  let list = thinkData.hook[name];\n  if (!list || list.length === 0) {\n    return Promise.resolve(data);\n  }\n  return _execItemMiddleware(list, 0, http, data);\n};\n\nexport default Hook;"]}