{"version":3,"sources":["../../src/core/http.js"],"names":["PAYLOAD_METHODS","req","res","init","startTime","Date","now","parseRequest","timeout","think","config","timeoutTimer","setTimeout","err","Error","code","error","statusAction","url","version","httpVersion","method","headers","host","hostname","pathname","query","_file","_post","_cookie","_sendCookie","_get","_prop","_contentTypeIsSend","_isResource","_isEnd","_outputContentPromise","_view","_session","_lang","_langAsViewPath","_config","_error","undefined","_theme","_cli","cli","module","controller","action","payload","tpl_file","pos","indexOf","slice","urlInfo","parse","normalizePathname","isEmpty","extend","prop","name","value","run","hook","exec","parsePayload","hasPayload","getPayload","encoding","_getPayload","resolve","readable","Buffer","buffers","deferred","defer","on","push","chunk","concat","statusCode","end","promise","then","buffer","toString","length","i","chr","result","decodeURIComponent","join","type","contentType","split","trim","lookup","toLowerCase","header","userAgent","referrer","referer","info","isGet","isPost","isCli","isAjax","toUpperCase","isJsonp","get","isString","post","param","file","headersSent","setHeader","status","ip","forward","proxy","userIP","localIP","filter","item","isIP","connection","socket","remoteAddress","lang","asViewPath","key","cookie_name","cookie","theme","options","cookies","map","stringify","expires","maxage","redirect","sendTime","time","success","data","message","obj","msg","fail","errno","errmsg","isObject","test","locale","isArray","isNumber","default_errno","jsonp","callback","replace","json","view","cls","require","date","toUTCString","apply","arguments","session","instance","delete","set","write","isPromise","isBuffer","log","outputConfig","fn","co","wrap","_end","process","nextTick","_afterEnd","flush","colors","cyan","filepath","path","isFile","unlink","clearTimeout","all","catch"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,CAAxB;;AAEA;;;;;;AAKE;;;;AAIA,kBAAYC,GAAZ,EAAiBC,GAAjB,EAAqB;AAAA;;AACnB,SAAKC,IAAL,CAAUF,GAAV,EAAeC,GAAf;AACD;AACD;;;;;;;;mBAMAC,I,iBAAKF,G,EAAKC,G,EAAI;AAAA;;AACZ;AACA,SAAKD,GAAL,GAAWA,GAAX;AACA;AACA,SAAKC,GAAL,GAAWA,GAAX;;AAEA;AACA,SAAKE,SAAL,GAAiBC,KAAKC,GAAL,EAAjB;;AAEA,SAAKC,YAAL;;AAEA;AACA,QAAIC,UAAUC,MAAMC,MAAN,CAAa,SAAb,CAAd;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,QAAGH,OAAH,EAAW;AACT,WAAKG,YAAL,GAAoBT,IAAIU,UAAJ,CAAeJ,UAAU,IAAzB,EAA+B,YAAM;AACvD,YAAIK,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAV;AACAD,YAAIE,IAAJ,GAAW,iBAAX;AACA,cAAKC,KAAL,GAAaH,GAAb;AACA,eAAOJ,MAAMQ,YAAN,CAAmB,GAAnB,QAAP;AACD,OALmB,CAApB;AAMD;AACF,G;AACD;;;;;;mBAIAV,Y,2BAAc;AACZ,SAAKW,GAAL,GAAW,KAAKjB,GAAL,CAASiB,GAApB;AACA,SAAKC,OAAL,GAAe,KAAKlB,GAAL,CAASmB,WAAxB;AACA,SAAKC,MAAL,GAAc,KAAKpB,GAAL,CAASoB,MAAvB;AACA,SAAKC,OAAL,GAAe,KAAKrB,GAAL,CAASqB,OAAxB;AACA,SAAKC,IAAL,GAAY,KAAKD,OAAL,CAAaC,IAAb,IAAqB,EAAjC;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;;AAEA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,IAAL,GAAY,EAAZ;;AAEA;AACA,SAAKC,KAAL,GAAa,EAAb;;AAEA,SAAKC,kBAAL,GAA0B,KAA1B,CAnBY,CAmBqB;AACjC,SAAKC,WAAL,GAAmB,KAAnB,CApBY,CAoBc;AAC1B,SAAKC,MAAL,GAAc,KAAd,CArBY,CAqBS;;AAErB,SAAKC,qBAAL,GAA6B,EAA7B;AACA,SAAKC,KAAL,GAAa,IAAb,CAxBY,CAwBO;AACnB,SAAKC,QAAL,GAAgB,IAAhB,CAzBY,CAyBU;AACtB,SAAKC,KAAL,GAAa,EAAb,CA1BY,CA0BK;AACjB,SAAKC,eAAL,GAAuB,KAAvB,CA3BY,CA2BkB;AAC9B,SAAKC,OAAL,GAAe,IAAf,CA5BY,CA4BS;AACrB,SAAKC,MAAL,GAAcC,SAAd,CA7BY,CA6Ba;AACzB,SAAKC,MAAL,GAAcD,SAAd,CA9BY,CA8Ba;AACzB,SAAK3B,KAAL,GAAa,IAAb,CA/BY,CA+BO;AACnB,SAAK6B,IAAL,GAAY,CAAC,CAACpC,MAAMqC,GAApB,CAhCY,CAgCa;;AAEzB,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,MAAL,GAAc,EAAd;;AAEA,SAAKC,OAAL,GAAe,IAAf,CAtCY,CAsCS;AACrB,SAAKC,QAAL,GAAgB,EAAhB,CAvCY,CAuCQ;;AAEpB;AACA,QAAG,KAAKlD,GAAL,CAASiB,GAAT,KAAiB,GAApB,EAAwB;AACtB,WAAKO,QAAL,GAAgB,GAAhB;AACA,UAAI2B,MAAM,KAAK7B,IAAL,CAAU8B,OAAV,CAAkB,GAAlB,CAAV;AACA,WAAK7B,QAAL,GAAgB4B,QAAQ,CAAC,CAAT,GAAa,KAAK7B,IAAlB,GAAyB,KAAKA,IAAL,CAAU+B,KAAV,CAAgB,CAAhB,EAAmBF,GAAnB,CAAzC;AACD,KAJD,MAIK;AACH,UAAIG,UAAU,cAAIC,KAAJ,CAAU,OAAO,KAAKjC,IAAZ,GAAmB,KAAKtB,GAAL,CAASiB,GAAtC,EAA2C,IAA3C,EAAiD,IAAjD,CAAd;AACA;AACA;AACA;AACA,WAAKO,QAAL,GAAgB,KAAKgC,iBAAL,CAAuBF,QAAQ9B,QAA/B,CAAhB;AACA,WAAKD,QAAL,GAAgB+B,QAAQ/B,QAAxB;AACA,UAAIE,QAAQ6B,QAAQ7B,KAApB;AACA,UAAG,CAACjB,MAAMiD,OAAN,CAAchC,KAAd,CAAJ,EAAyB;AACvB,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKK,IAAL,GAAYtB,MAAMkD,MAAN,CAAa,EAAb,EAAiBjC,KAAjB,CAAZ;AACD;AACF;AACF,G;AACD;;;;;mBAGAkC,I,iBAAKC,I,EAAMC,K,EAAM;AACf,QAAGA,UAAUnB,SAAb,EAAuB;AACrB,aAAO,KAAKX,KAAL,CAAW6B,IAAX,CAAP;AACD;AACD,SAAK7B,KAAL,CAAW6B,IAAX,IAAmBC,KAAnB;AACA,WAAO,IAAP;AACD,G;AACD;;;;;;mBAIMC,G;;;;;;;qBAEEtD,MAAMuD,IAAN,CAAWC,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,C;;;oBAEFjE,gBAAgBqD,OAAhB,CAAwB,KAAKpD,GAAL,CAASoB,MAAjC,IAA2C,CAAC,C;;;;;;qBACxC,KAAK6C,YAAL,E;;;+CAED,I;;;;;;;;;;;;;;;;AAET;;;;;;mBAIAC,U,yBAAY;AACV,QAAI,uBAAuB,KAAKlE,GAAL,CAASqB,OAApC,EAA6C;AAC3C,aAAO,IAAP;AACD;AACD,WAAO,CAAC,KAAKrB,GAAL,CAASqB,OAAT,CAAiB,gBAAjB,IAAqC,CAAtC,IAA2C,CAAlD;AACD,G;AACD;;;;;;;mBAKA8C,U,yBAA6B;AAAA;;AAAA,QAAlBC,QAAkB,uEAAP,MAAO;;;AAE3B,QAAIC,cAAc,SAAdA,WAAc,GAAM;AACtB,UAAG,OAAKpB,OAAR,EAAgB;AACd,eAAO,kBAAQqB,OAAR,CAAgB,OAAKrB,OAArB,CAAP;AACD;AACD,UAAG,CAAC,OAAKjD,GAAL,CAASuE,QAAb,EAAsB;AACpB,eAAO,kBAAQD,OAAR,CAAgB,IAAIE,MAAJ,CAAW,CAAX,CAAhB,CAAP;AACD;AACD,UAAIC,UAAU,EAAd;AACA,UAAIC,WAAWlE,MAAMmE,KAAN,EAAf;AACA,aAAK3E,GAAL,CAAS4E,EAAT,CAAY,MAAZ,EAAoB,iBAAS;AAC3BH,gBAAQI,IAAR,CAAaC,KAAb;AACD,OAFD;AAGA,aAAK9E,GAAL,CAAS4E,EAAT,CAAY,KAAZ,EAAmB,YAAM;AACvB,eAAK3B,OAAL,GAAeuB,OAAOO,MAAP,CAAcN,OAAd,CAAf;AACAC,iBAASJ,OAAT,CAAiB,OAAKrB,OAAtB;AACD,OAHD;AAIA,aAAKjD,GAAL,CAAS4E,EAAT,CAAY,OAAZ,EAAqB,YAAM;AACzB,eAAK3E,GAAL,CAAS+E,UAAT,GAAsB,GAAtB;AACA,eAAKC,GAAL;AACD,OAHD;AAIA,aAAOP,SAASQ,OAAhB;AACD,KArBD;;AAuBA,WAAOb,cAAcc,IAAd,CAAmB,kBAAU;AAClC,aAAOf,aAAa,IAAb,GAAoBgB,MAApB,GAA6BA,OAAOC,QAAP,CAAgBjB,QAAhB,CAApC;AACD,KAFM,CAAP;AAGD,G;AACD;;;;;;mBAIMH,Y;;;;;;mBACD,KAAKC,UAAL,E;;;;;;qBACK1D,MAAMuD,IAAN,CAAW,eAAX,EAA4B,IAA5B,C;;;;qBACAvD,MAAMuD,IAAN,CAAW,kBAAX,EAA+B,IAA/B,C;;;;;;;;;;;;;;;;;AAIV;;;;;;;mBAKAP,iB,8BAAkBhC,Q,EAAS;AACzB,QAAI8D,SAAS9D,SAAS8D,MAAtB;AACA,QAAIC,IAAI,CAAR;AAAA,QAAWC,YAAX;AAAA,QAAgBC,SAAS,EAAzB;AAAA,QAA6B5B,QAAQ,EAArC;AACA,WAAM0B,IAAID,MAAV,EAAiB;AACfE,YAAMhE,SAAS+D,GAAT,CAAN;AACA,UAAGC,QAAQ,GAAR,IAAeA,QAAQ,IAA1B,EAA+B;AAC7B,YAAG3B,SAAS6B,mBAAmB7B,KAAnB,EAA0B,CAA1B,MAAiC,GAA7C,EAAiD;AAC/C4B,iBAAOZ,IAAP,CAAYhB,KAAZ;AACD;AACDA,gBAAQ,EAAR;AACD,OALD,MAKK;AACHA,iBAAS2B,GAAT;AACD;AACF;AACD,QAAG3B,SAAS6B,mBAAmB7B,KAAnB,MAA8B,GAA1C,EAA8C;AAC5C4B,aAAOZ,IAAP,CAAYhB,KAAZ;AACD;AACD,WAAO4B,OAAOE,IAAP,CAAY,GAAZ,CAAP;AACD,G;AACD;;;;;;;;mBAMAlF,M,mBAAOmD,I,EAAMC,K,EAAM;AACjB,WAAOrD,MAAMC,MAAN,CAAamD,IAAb,EAAmBC,KAAnB,EAA0B,KAAKrB,OAA/B,CAAP;AACD,G;AACD;;;;;;;mBAKAoD,I,iBAAKC,W,EAAazB,Q,EAAS;AACzB,QAAI,CAACyB,WAAL,EAAkB;AAChB,aAAO,CAAC,KAAKxE,OAAL,CAAa,cAAb,KAAgC,EAAjC,EAAqCyE,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDC,IAAnD,EAAP;AACD;AACD,QAAI,KAAK/D,kBAAT,EAA6B;AAC3B;AACD;AACD,QAAI6D,YAAYzC,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAAlC,EAAqC;AACnCyC,oBAAc,eAAKG,MAAL,CAAYH,WAAZ,CAAd;AACD;AACD,QAAIzB,aAAa,KAAb,IAAsByB,YAAYI,WAAZ,GAA0B7C,OAA1B,CAAkC,UAAlC,MAAkD,CAAC,CAA7E,EAAgF;AAC9EyC,qBAAe,gBAAgBzB,YAAY,KAAK3D,MAAL,CAAY,UAAZ,CAA5B,CAAf;AACD;AACD,SAAKyF,MAAL,CAAY,cAAZ,EAA4BL,WAA5B;AACD,G;AACD;;;;;;mBAIAM,S,wBAAW;AACT,WAAO,KAAK9E,OAAL,CAAa,YAAb,KAA8B,EAArC;AACD,G;AACD;;;;;;;mBAKA+E,Q,qBAAS9E,I,EAAK;AACZ,QAAI+E,UAAU,KAAKhF,OAAL,CAAagF,OAAb,IAAwB,KAAKhF,OAAL,CAAa+E,QAArC,IAAiD,EAA/D;AACA,QAAI,CAACC,OAAD,IAAY,CAAC/E,IAAjB,EAAuB;AACrB,aAAO+E,OAAP;AACD;AACD,QAAIC,OAAO,cAAI/C,KAAJ,CAAU8C,OAAV,CAAX;AACA,WAAOC,KAAK/E,QAAZ;AACD,G;AACD;;;;;;mBAIAgF,K,oBAAO;AACL,WAAO,KAAKnF,MAAL,KAAgB,KAAvB;AACD,G;AACD;;;;;;mBAIAoF,M,qBAAQ;AACN,WAAO,KAAKpF,MAAL,KAAgB,MAAvB;AACD,G;AACD;;;;;;mBAIAqF,K,oBAAO;AACL,WAAO,KAAK7D,IAAZ;AACD,G;AACD;;;;;;;mBAKA8D,M,mBAAOtF,M,EAAQ;AACb,QAAIA,UAAU,KAAKA,MAAL,KAAgBA,OAAOuF,WAAP,EAA9B,EAAoD;AAClD,aAAO,KAAP;AACD;AACD,WAAO,KAAKtF,OAAL,CAAa,kBAAb,MAAqC,gBAA5C;AACD,G;AACD;;;;;;;mBAKAuF,O,oBAAQhD,I,EAAK;AACXA,WAAOA,QAAQ,KAAKnD,MAAL,CAAY,eAAZ,CAAf;AACA,WAAO,CAAC,CAAC,KAAKoG,GAAL,CAASjD,IAAT,CAAT;AACD,G;AACD;;;;;;;mBAKAiD,G,gBAAIjD,I,EAAMC,K,EAAM;AACd,QAAIA,UAAUnB,SAAd,EAAyB;AACvB,UAAIkB,SAASlB,SAAb,EAAwB;AACtB,eAAO,KAAKZ,IAAZ;AACD,OAFD,MAEM,IAAItB,MAAMsG,QAAN,CAAelD,IAAf,CAAJ,EAA0B;AAC9B;AACAC,gBAAQ,KAAK/B,IAAL,CAAU8B,IAAV,CAAR;AACA,YAAGC,UAAUnB,SAAb,EAAuB;AACrBmB,kBAAQ,EAAR;AACD;AACD,eAAOA,KAAP;AACD;AACD,WAAK/B,IAAL,GAAY8B,IAAZ;AACD,KAZD,MAYK;AACH,WAAK9B,IAAL,CAAU8B,IAAV,IAAkBC,KAAlB;AACD;AACF,G;AACD;;;;;;;mBAKAkD,I,iBAAKnD,I,EAAMC,K,EAAM;AACf,QAAIA,UAAUnB,SAAd,EAAyB;AACvB,UAAIkB,SAASlB,SAAb,EAAwB;AACtB,eAAO,KAAKf,KAAZ;AACD,OAFD,MAEM,IAAInB,MAAMsG,QAAN,CAAelD,IAAf,CAAJ,EAA0B;AAC9B;AACAC,gBAAQ,KAAKlC,KAAL,CAAWiC,IAAX,CAAR;AACA,YAAGC,UAAUnB,SAAb,EAAuB;AACrBmB,kBAAQ,EAAR;AACD;AACD,eAAOA,KAAP;AACD;AACD,WAAKlC,KAAL,GAAaiC,IAAb;AACD,KAZD,MAYM;AACJ,WAAKjC,KAAL,CAAWiC,IAAX,IAAmBC,KAAnB;AACD;AACF,G;AACD;;;;;;;mBAKAmD,K,kBAAMpD,I,EAAK;AACT,QAAIA,SAASlB,SAAb,EAAwB;AACtB,aAAOlC,MAAMkD,MAAN,CAAa,EAAb,EAAiB,KAAK5B,IAAtB,EAA4B,KAAKH,KAAjC,CAAP;AACD;AACD,WAAO,KAAKA,KAAL,CAAWiC,IAAX,KAAoB,KAAK9B,IAAL,CAAU8B,IAAV,CAApB,IAAuC,EAA9C;AACD,G;AACD;;;;;;;mBAKAqD,I,iBAAKrD,I,EAAMC,K,EAAM;AACf,QAAIA,UAAUnB,SAAd,EAAyB;AACvB,UAAIkB,SAASlB,SAAb,EAAwB;AACtB,eAAOlC,MAAMkD,MAAN,CAAa,EAAb,EAAiB,KAAKhC,KAAtB,CAAP;AACD;AACD,aAAOlB,MAAMkD,MAAN,CAAa,EAAb,EAAiB,KAAKhC,KAAL,CAAWkC,IAAX,CAAjB,CAAP;AACD;AACD,SAAKlC,KAAL,CAAWkC,IAAX,IAAmBC,KAAnB;AACD,G;AACD;;;;;;;;mBAMAqC,M,mBAAOtC,I,EAAMC,K,EAAM;AACjB,QAAID,SAASlB,SAAb,EAAwB;AACtB,aAAO,KAAKrB,OAAZ;AACD,KAFD,MAEM,IAAIwC,UAAUnB,SAAd,EAAyB;AAC7B,aAAO,KAAKrB,OAAL,CAAauC,KAAKqC,WAAL,EAAb,KAAoC,EAA3C;AACD;AACD;AACA,QAAIrC,KAAKqC,WAAL,OAAuB,cAA3B,EAA2C;AACzC,UAAI,KAAKjE,kBAAT,EAA6B;AAC3B;AACD;AACD,WAAKA,kBAAL,GAA0B,IAA1B;AACD;AACD;AACA,QAAI,CAAC,KAAK/B,GAAL,CAASiH,WAAd,EAA2B;AACzB,WAAKjH,GAAL,CAASkH,SAAT,CAAmBvD,IAAnB,EAAyBC,KAAzB;AACD;AACF,G;AACD;;;;;;;mBAKAuD,M,qBAAoB;AAAA,QAAbA,OAAa,uEAAJ,GAAI;;AAClB,QAAInH,MAAM,KAAKA,GAAf;AACA,QAAI,CAACA,IAAIiH,WAAT,EAAsB;AACpBjH,UAAI+E,UAAJ,GAAiBoC,OAAjB;AACD;AACD,WAAO,IAAP;AACD,G;AACD;;;;;;mBAIAC,E,eAAGC,O,EAAQ;AACT,QAAIC,QAAQ/G,MAAMC,MAAN,CAAa,UAAb,KAA4B,KAAKa,IAAL,KAAc,KAAKC,QAA3D;AACA,QAAIiG,eAAJ;AACA,QAAIC,UAAU,WAAd;AACA,QAAIF,KAAJ,EAAW;AACT,UAAID,OAAJ,EAAa;AACX,eAAO,CAAC,KAAKjG,OAAL,CAAa,iBAAb,KAAmC,EAApC,EAAwCyE,KAAxC,CAA8C,GAA9C,EAAmD4B,MAAnD,CAA0D,gBAAQ;AACvEC,iBAAOA,KAAK5B,IAAL,EAAP;AACA,cAAIvF,MAAMoH,IAAN,CAAWD,IAAX,CAAJ,EAAsB;AACpB,mBAAOA,IAAP;AACD;AACF,SALM,CAAP;AAMD;AACDH,eAAS,KAAKnG,OAAL,CAAa,WAAb,CAAT;AACD,KAVD,MAUK;AACH,UAAIwG,aAAa,KAAK7H,GAAL,CAAS6H,UAA1B;AACA,UAAIC,SAAS,KAAK9H,GAAL,CAAS8H,MAAtB;AACA,UAAID,cAAcA,WAAWE,aAAX,KAA6BN,OAA/C,EAAwD;AACtDD,iBAASK,WAAWE,aAApB;AACD,OAFD,MAEM,IAAID,UAAUA,OAAOC,aAAP,KAAyBN,OAAvC,EAAgD;AACpDD,iBAASM,OAAOC,aAAhB;AACD;AACF;AACD,QAAI,CAACP,MAAL,EAAa;AACX,aAAOC,OAAP;AACD;AACD,QAAID,OAAOpE,OAAP,CAAe,GAAf,IAAsB,CAAC,CAA3B,EAA8B;AAC5BoE,eAASA,OAAO1B,KAAP,CAAa,GAAb,EAAkBzC,KAAlB,CAAwB,CAAC,CAAzB,EAA4B,CAA5B,CAAT;AACD;AACD,QAAI,CAAC7C,MAAMoH,IAAN,CAAWJ,MAAX,CAAL,EAAyB;AACvB,aAAOC,OAAP;AACD;AACD,WAAOD,MAAP;AACD,G;AACD;;;;;;mBAIAQ,I,iBAAKA,K,EAAMC,U,EAAW;AACpB,QAAGD,KAAH,EAAQ;AACN,WAAK1F,KAAL,GAAa0F,KAAb;AACA,WAAKzF,eAAL,GAAuB0F,UAAvB;AACA;AACD;AACD;AACA,QAAG,KAAK3F,KAAR,EAAc;AACZ,aAAO,KAAKA,KAAZ;AACD;AACD;AACA,QAAI4F,MAAM,KAAKzH,MAAL,CAAY,QAAZ,EAAsB0H,WAAhC;AACA,QAAItE,QAAQ,KAAKuE,MAAL,CAAYF,GAAZ,CAAZ;AACA,QAAGrE,KAAH,EAAS;AACP,WAAKvB,KAAL,GAAauB,KAAb;AACA,aAAOA,KAAP;AACD;AACD;AACAmE,YAAO,KAAK9B,MAAL,CAAY,iBAAZ,CAAP;AACA;AACA,SAAK5D,KAAL,GAAa,CAAC0F,MAAKlC,KAAL,CAAW,GAAX,EAAgB,CAAhB,KAAsB,EAAvB,EAA2BG,WAA3B,EAAb;AACA,WAAO,KAAK3D,KAAZ;AACD,G;AACD;;;;;;;mBAKA+F,K,kBAAMA,M,EAAM;AACV,QAAGA,MAAH,EAAS;AACP,WAAK1F,MAAL,GAAc0F,MAAd;AACA;AACD;AACD,WAAO,KAAK1F,MAAZ;AACD,G;AACD;;;;;;;;;mBAOAyF,M,mBAAOxE,I,EAAMC,K,EAAOyE,O,EAAQ;AAC1B;AACA,QAAI1E,SAAS,IAAb,EAAmB;AACjB,UAAIpD,MAAMiD,OAAN,CAAc,KAAK5B,WAAnB,CAAJ,EAAqC;AACnC;AACD;AACD,UAAI0G,UAAU,sBAAc,KAAK1G,WAAnB,EAAgC2G,GAAhC,CAAoC,UAACb,IAAD,EAAU;AAC1D,eAAO,iBAAOc,SAAP,CAAiBd,KAAK/D,IAAtB,EAA4B+D,KAAK9D,KAAjC,EAAwC8D,IAAxC,CAAP;AACD,OAFa,CAAd;AAGA,WAAKzB,MAAL,CAAY,YAAZ,EAA0BqC,OAA1B;AACA,WAAK1G,WAAL,GAAmB,EAAnB;AACA;AACD;AACD;AACA,QAAGrB,MAAMiD,OAAN,CAAc,KAAK7B,OAAnB,KAA+B,KAAKP,OAAL,CAAa+G,MAA/C,EAAsD;AACpD,WAAKxG,OAAL,GAAe,iBAAO2B,KAAP,CAAa,KAAKlC,OAAL,CAAa+G,MAA1B,CAAf;AACD;AACD,QAAIxE,SAASlB,SAAb,EAAwB;AACtB,aAAO,KAAKd,OAAZ;AACD,KAFD,MAEM,IAAIiC,UAAUnB,SAAd,EAAyB;AAC7B,aAAO,KAAKd,OAAL,CAAagC,IAAb,KAAsB,KAAK/B,WAAL,CAAiB+B,IAAjB,KAA0B,KAAK/B,WAAL,CAAiB+B,IAAjB,EAAuBC,KAAvE,IAAgF,EAAvF;AACD;AACD;AACA,QAAI,OAAOyE,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,gBAAU,EAAC/H,SAAS+H,OAAV,EAAV;AACD;AACDA,cAAU9H,MAAMkD,MAAN,CAAa,EAAb,EAAiB,KAAKjD,MAAL,CAAY,QAAZ,CAAjB,EAAwC6H,OAAxC,CAAV;AACA,QAAIzE,UAAU,IAAd,EAAoB;AAClByE,cAAQ/H,OAAR,GAAkB,CAAC,IAAnB;AACD;AACD,QAAI+H,QAAQ/H,OAAR,KAAoB,CAAxB,EAA2B;AACzB+H,cAAQI,OAAR,GAAkB,IAAItI,IAAJ,CAASA,KAAKC,GAAL,KAAaiI,QAAQ/H,OAAR,GAAkB,IAAxC,CAAlB;AACD;AACD,QAAG+H,QAAQ/H,OAAR,GAAkB,CAArB,EAAuB;AACrB+H,cAAQK,MAAR,GAAiBL,QAAQ/H,OAAzB;AACD;AACD+H,YAAQ1E,IAAR,GAAeA,IAAf;AACA0E,YAAQzE,KAAR,GAAgBA,KAAhB;AACA,SAAKhC,WAAL,CAAiB+B,IAAjB,IAAyB0E,OAAzB;AACD,G;AACD;;;;;;;;mBAMAM,Q,qBAAS3H,G,EAAKH,I,EAAK;AACjB,SAAKb,GAAL,CAAS+E,UAAT,GAAsBlE,QAAQ,GAA9B;AACA,SAAKoF,MAAL,CAAY,UAAZ,EAAwBjF,OAAO,GAA/B;AACA,SAAKgE,GAAL;AACD,G;AACD;;;;;;;mBAKA4D,Q,qBAASjF,I,EAAK;AACZ,QAAIkF,OAAO1I,KAAKC,GAAL,KAAa,KAAKF,SAA7B;AACA,SAAK+F,MAAL,CAAY,QAAQtC,QAAQ,WAAhB,CAAZ,EAA0CkF,OAAO,IAAjD;AACD,G;AACD;;;;;;;;mBAMAC,O,sBAAgC;AAAA;;AAAA,QAAxBC,IAAwB,uEAAjB,EAAiB;AAAA,QAAbC,OAAa,uEAAH,EAAG;;AAC9B,QAAIlI,QAAQ,KAAKN,MAAL,CAAY,OAAZ,CAAZ;AACA,QAAIyI,uBACDnI,MAAMmH,GADL,IACW,CADX,OAEDnH,MAAMoI,GAFL,IAEWF,OAFX,OAGFD,IAHE,GAGIA,IAHJ,OAAJ;AAKA,SAAKpD,IAAL,CAAU,KAAKnF,MAAL,CAAY,mBAAZ,CAAV;AACA,SAAKwE,GAAL,CAASiE,GAAT;AACD,G;AACD;;;;;;;;;mBAOAE,I,iBAAKC,K,EAA8B;AAAA,QAAvBC,MAAuB,uEAAd,EAAc;AAAA,QAAVN,IAAU,uEAAH,EAAG;;AACjC,QAAIE,YAAJ;AACA,QAAInI,QAAQ,KAAKN,MAAL,CAAY,OAAZ,CAAZ;AACA,QAAID,MAAM+I,QAAN,CAAeF,KAAf,CAAJ,EAA2B;AACzBH,YAAM1I,MAAMkD,MAAN,CAAa,EAAb,EAAiB2F,KAAjB,CAAN;AACD,KAFD,MAEK;AAAA;;AACH,UAAG,aAAaG,IAAb,CAAkBH,KAAlB,CAAH,EAA4B;AAC1B,YAAIF,MAAM,KAAKM,MAAL,CAAYJ,KAAZ,CAAV;AACA,YAAG7I,MAAMkJ,OAAN,CAAcP,GAAd,CAAH,EAAsB;AACpBE,kBAAQF,IAAI,CAAJ,CAAR;AACAG,mBAASH,IAAI,CAAJ,CAAT;AACD;AACF;AACD,UAAI,CAAC3I,MAAMmJ,QAAN,CAAeN,KAAf,CAAL,EAA4B;AAC1BL,eAAOM,MAAP;AACAA,iBAASD,KAAT;AACAA,gBAAQtI,MAAM6I,aAAd;AACD;AACD;AACA,UAAG,CAACN,MAAJ,EAAW;AACTA,iBAAS,KAAKG,MAAL,CAAYJ,KAAZ,KAAsB,EAA/B;AACD;AACDH,+BACGnI,MAAMmH,GADT,IACemB,KADf,QAEGtI,MAAMoI,GAFT,IAEeG,MAFf;AAIA,UAAGN,IAAH,EAAQ;AACNE,YAAIF,IAAJ,GAAWA,IAAX;AACD;AACF;AACD,SAAKpD,IAAL,CAAU,KAAKnF,MAAL,CAAY,mBAAZ,CAAV;AACA,SAAKwE,GAAL,CAASiE,GAAT;AACD,G;AACD;;;;;;;mBAKAW,K,kBAAMb,I,EAAM;AACV,SAAKpD,IAAL,CAAU,KAAKnF,MAAL,CAAY,mBAAZ,CAAV;AACA,QAAIqJ,WAAW,KAAKjD,GAAL,CAAS,KAAKpG,MAAL,CAAY,eAAZ,CAAT,CAAf;AACA;AACAqJ,eAAWA,SAASC,OAAT,CAAiB,UAAjB,EAA6B,EAA7B,CAAX;AACA,QAAID,QAAJ,EAAc;AACZd,aAAOc,WAAW,GAAX,IAAkBd,SAAStG,SAAT,GAAqB,yBAAesG,IAAf,CAArB,GAA4C,EAA9D,IAAoE,GAA3E;AACD;AACD,SAAK/D,GAAL,CAAS+D,IAAT;AACD,G;AACD;;;;;;;mBAKAgB,I,iBAAKhB,I,EAAK;AACR,SAAKpD,IAAL,CAAU,KAAKnF,MAAL,CAAY,mBAAZ,CAAV;AACA,SAAKwE,GAAL,CAAS+D,IAAT;AACD,G;AACD;;;;;;mBAIAiB,I,mBAAM;AACJ,QAAI,CAAC,KAAK7H,KAAV,EAAiB;AACf,UAAI8H,MAAM1J,MAAM2J,OAAN,CAAc,MAAd,CAAV;AACA,WAAK/H,KAAL,GAAa,IAAI8H,GAAJ,CAAQ,IAAR,CAAb;AACD;AACD,WAAO,KAAK9H,KAAZ;AACD,G;AACD;;;;;;mBAIAsG,O,oBAAQI,I,EAAK;AACXA,WAAOA,OAAO,IAAd;AACA,QAAIsB,OAAO,IAAIhK,IAAJ,CAASA,KAAKC,GAAL,KAAayI,IAAtB,CAAX;AACA,SAAK5C,MAAL,CAAY,eAAZ,eAAwC4C,IAAxC;AACA,SAAK5C,MAAL,CAAY,SAAZ,EAAuBkE,KAAKC,WAAL,EAAvB;AACD,G;AACD;;;;;;;mBAKAZ,M,qBAAQ;AACN,WAAOjJ,MAAMiJ,MAAN,CAAaa,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAP;AACD,G;AACA;;;;;;;;mBAMDC,O,oBAAQ5G,I,EAAMC,K,EAAO;AACnBrD,UAAMgK,OAAN,CAAc,IAAd;AACA,QAAIC,WAAW,KAAKpI,QAApB;AACA,QAAIuB,SAASlB,SAAb,EAAwB;AACtB,aAAO+H,SAASC,MAAT,EAAP;AACD;AACD,QAAI7G,UAAUnB,SAAd,EAAyB;AACvB,aAAO+H,SAASE,GAAT,CAAa/G,IAAb,EAAmBC,KAAnB,CAAP;AACD;AACD,WAAO4G,SAAS5D,GAAT,CAAajD,IAAb,CAAP;AACD,G;AACD;;;;;;;;mBAMAgH,K,kBAAM1B,G,EAAwC;AAAA,QAAnC9E,QAAmC,uEAAxB,KAAK3D,MAAL,CAAY,UAAZ,CAAwB;;AAC5C,QAAG,CAAC,KAAKR,GAAL,CAAS4H,UAAb,EAAwB;AACtB;AACD;AACD,SAAKjC,IAAL,CAAU,KAAKnF,MAAL,CAAY,mBAAZ,CAAV;AACA,SAAK2H,MAAL,CAAY,IAAZ;AACA,QAAIc,QAAQxG,SAAZ,EAAuB;AACrB;AACD;AACD,QAAGlC,MAAMqK,SAAN,CAAgB3B,GAAhB,CAAH,EAAwB;AACtB;AACA,WAAKlH,kBAAL,GAA0B,KAA1B;AACA,YAAM,IAAInB,KAAJ,CAAU,uBAAV,CAAN;AACD;AACD,QAAIL,MAAMkJ,OAAN,CAAcR,GAAd,KAAsB1I,MAAM+I,QAAN,CAAeL,GAAf,CAA1B,EAA+C;AAC7CA,YAAM,yBAAeA,GAAf,CAAN;AACD,KAFD,MAEM,IAAI,CAAC1I,MAAMsK,QAAN,CAAe5B,GAAf,CAAL,EAA0B;AAC9BA,aAAO,EAAP;AACD;;AAED;AACA,QAAG,KAAKhH,MAAR,EAAe;AACb,UAAG1B,MAAMsK,QAAN,CAAe5B,GAAf,CAAH,EAAuB;AACrB1I,cAAMuK,GAAN,CAAU,oCAAV,EAAgD,SAAhD;AACD,OAFD,MAEK;AACH,YAAI5H,MAAM+F,IAAI9F,OAAJ,CAAY,IAAZ,CAAV;AACA,YAAGD,MAAM,CAAC,CAAV,EAAY;AACV+F,gBAAMA,IAAI7F,KAAJ,CAAU,CAAV,EAAaF,GAAb,IAAoB,KAA1B;AACD;AACD3C,cAAMuK,GAAN,CAAU,kCAAkC7B,GAAlC,GAAwC,GAAlD,EAAuD,SAAvD;AACD;AACD;AACD;AACD,QAAI8B,eAAe,KAAKvK,MAAL,CAAY,gBAAZ,CAAnB;AACA,QAAI,CAACuK,YAAL,EAAmB;AACjB,aAAO,KAAK/K,GAAL,CAAS2K,KAAT,CAAe1B,GAAf,EAAoB9E,QAApB,CAAP;AACD;AACD,QAAI6G,KAAKzK,MAAM0K,EAAN,CAASC,IAAT,CAAcH,YAAd,CAAT;AACA,QAAI9F,UAAU+F,GAAG/B,GAAH,EAAQ9E,QAAR,EAAkB,IAAlB,CAAd;AACA,SAAKjC,qBAAL,CAA2B0C,IAA3B,CAAgCK,OAAhC;AACD,G;AACD;;;;;;mBAIAkG,I,mBAAM;AAAA;;AACJ,SAAKhD,MAAL,CAAY,IAAZ;AACA,SAAKnI,GAAL,CAASgF,GAAT;;AAEAoG,YAAQC,QAAR,CAAiB,YAAM;AACrB,aAAKC,SAAL;AACD,KAFD;AAGD,G;AACD;;;;;;mBAIAA,S,wBAAW;AAAA;;AACT;AACA,QAAG,KAAKlJ,QAAL,IAAiB,KAAKA,QAAL,CAAcmJ,KAAlC,EAAwC;AACtC,WAAKnJ,QAAL,CAAcmJ,KAAd;AACD;;AAED;AACA,QAAG,KAAK/K,MAAL,CAAY,aAAZ,KAA8B,CAAC,KAAKwB,WAAvC,EAAmD;AACjDzB,YAAMuK,GAAN,CAAU,kBAAU;AAClB,YAAI5B,MAAM,CACR,OAAK/H,MADG,EACK,OAAKH,GADV,EAERwK,OAAOC,IAAP,MAAe,OAAKzL,GAAL,CAAS+E,UAAxB,CAFQ,EAGRW,IAHQ,CAGH,GAHG,CAAV;AAIA,eAAOwD,GAAP;AACD,OAND,EAMG,MANH,EAMW,KAAKhJ,SANhB;AAOD;;AAED;AACA,QAAI,CAACK,MAAMiD,OAAN,CAAc,KAAK/B,KAAnB,CAAL,EAAgC;AAC9B,UAAIwG,GAAJ,EAASyD,QAAT;AACA,WAAIzD,GAAJ,IAAW,KAAKxG,KAAhB,EAAsB;AACpBiK,mBAAW,KAAKjK,KAAL,CAAWwG,GAAX,EAAgB0D,IAA3B;AACA,YAAIpL,MAAMqL,MAAN,CAAaF,QAAb,CAAJ,EAA4B;AAC1B,uBAAGG,MAAH,CAAUH,QAAV,EAAoB,YAAM,CAAE,CAA5B;AACD;AACF;AACF;AACF,G;AACD;;;;;;mBAIA1G,G,gBAAIiE,G,EAAK9E,Q,EAAS;AAAA;;AAChB,QAAG,KAAKlC,MAAR,EAAe;AACb;AACD;AACD,QAAG,KAAKxB,YAAR,EAAqB;AACnBqL,mBAAa,KAAKrL,YAAlB;AACA,WAAKA,YAAL,GAAoB,CAApB;AACD;AACD,SAAKkK,KAAL,CAAW1B,GAAX,EAAgB9E,QAAhB;AACA;AACA,SAAKlC,MAAL,GAAc,IAAd;AACA,QAAI,CAAC,KAAKC,qBAAL,CAA2BmD,MAAhC,EAAwC;AACtC,aAAO,KAAK8F,IAAL,EAAP;AACD;;AAED,WAAO,kBAAQY,GAAR,CAAY,KAAK7J,qBAAjB,EAAwCgD,IAAxC,CAA6C,YAAM;AACxD,aAAKhD,qBAAL,GAA6B,EAA7B;AACA,aAAKiJ,IAAL;AACD,KAHM,EAGJa,KAHI,CAGE,YAAM;AACb,aAAKb,IAAL;AACD,KALM,CAAP;AAMD,G","file":"http.js","sourcesContent":["'use strict';\n\nimport url from 'url';\nimport fs from 'fs';\nimport mime from 'mime';\nimport cookie from '../util/cookie.js';\n\nconst PAYLOAD_METHODS = ['POST', 'PUT', 'PATCH'];\n\n/**\n * wrap for request & response\n * @type {Object}\n */\nexport default class {\n  /**\n   * constructor\n   * @return {} []\n   */\n  constructor(req, res){\n    this.init(req, res);\n  }\n  /**\n   * init method\n   * @param  {Object} req [request]\n   * @param  {Object} res [response]\n   * @return {}     []\n   */\n  init(req, res){\n    //request object\n    this.req = req;\n    //response object\n    this.res = res;\n\n    //set http start time\n    this.startTime = Date.now();\n\n    this.parseRequest();\n\n    //set request timeout\n    let timeout = think.config('timeout');\n    this.timeoutTimer = 0;\n    if(timeout){\n      this.timeoutTimer = res.setTimeout(timeout * 1000, () => {\n        let err = new Error('request timeout');\n        err.code = 'REQUEST_TIMEOUT';\n        this.error = err;\n        return think.statusAction(500, this);\n      });\n    }\n  }\n  /**\n   * parse properties\n   * @return {} []\n   */\n  parseRequest(){\n    this.url = this.req.url;\n    this.version = this.req.httpVersion;\n    this.method = this.req.method;\n    this.headers = this.req.headers;\n    this.host = this.headers.host || '';\n    this.hostname = '';\n    this.pathname = '';\n\n    this.query = {};\n    this._file = {};\n    this._post = {};\n    this._cookie = {};\n    this._sendCookie = {};\n    this._get = {};\n    \n    //store all other properties\n    this._prop = {};\n    \n    this._contentTypeIsSend = false; //aleady send content-type header\n    this._isResource = false; //is resource request\n    this._isEnd = false; //request is end\n\n    this._outputContentPromise = [];\n    this._view = null; //view instance\n    this._session = null; //session instance\n    this._lang = ''; //language\n    this._langAsViewPath = false; //language as view path\n    this._config = null; // config\n    this._error = undefined; //error message\n    this._theme = undefined; //theme\n    this.error = null; //error object\n    this._cli = !!think.cli; //cli request\n    \n    this.module = '';\n    this.controller = '';\n    this.action = '';\n\n    this.payload = null; //request payload, Buffer\n    this.tpl_file = ''; //template file path\n\n    //optimize for homepage request\n    if(this.req.url === '/'){\n      this.pathname = '/';\n      let pos = this.host.indexOf(':');\n      this.hostname = pos === -1 ? this.host : this.host.slice(0, pos);\n    }else{\n      let urlInfo = url.parse('//' + this.host + this.req.url, true, true);\n      //can not use decodeURIComponent, pathname may be has encode / chars\n      //decodeURIComponent value after parse route\n      //remove unsafe chars in pathname\n      this.pathname = this.normalizePathname(urlInfo.pathname);\n      this.hostname = urlInfo.hostname;\n      let query = urlInfo.query;\n      if(!think.isEmpty(query)){\n        this.query = query;\n        this._get = think.extend({}, query);\n      } \n    }\n  }\n  /**\n   * get or set property\n   */\n  prop(name, value){\n    if(value === undefined){\n      return this._prop[name];\n    }\n    this._prop[name] = value;\n    return this;\n  }\n  /**\n   * exec\n   * @return Promise            []\n   */\n  async run(){\n    \n    await think.hook.exec('request_begin', this);\n    //array indexOf is faster than string\n    if (PAYLOAD_METHODS.indexOf(this.req.method) > -1) {\n      await this.parsePayload();\n    }\n    return this;\n  }\n  /**\n   * check request has post data\n   * @return {Boolean} []\n   */\n  hasPayload(){\n    if ('transfer-encoding' in this.req.headers) {\n      return true;\n    }\n    return (this.req.headers['content-length'] | 0) > 0;\n  }\n  /**\n   * get payload data\n   * @param  {String} encoding [payload data encoding]\n   * @return {}          []\n   */\n  getPayload(encoding = 'utf8'){\n\n    let _getPayload = () => {\n      if(this.payload){\n        return Promise.resolve(this.payload);\n      }\n      if(!this.req.readable){\n        return Promise.resolve(new Buffer(0));\n      }\n      let buffers = [];\n      let deferred = think.defer();\n      this.req.on('data', chunk => {\n        buffers.push(chunk);\n      });\n      this.req.on('end', () => {\n        this.payload = Buffer.concat(buffers);\n        deferred.resolve(this.payload);\n      });\n      this.req.on('error', () => {\n        this.res.statusCode = 400;\n        this.end();\n      });\n      return deferred.promise;\n    };\n\n    return _getPayload().then(buffer => {\n      return encoding === true ? buffer : buffer.toString(encoding);\n    });\n  }\n  /**\n   * parse payload from request\n   * @return {Promise} []\n   */\n  async parsePayload(){\n    if(this.hasPayload()){\n      await think.hook('payload_parse', this);\n      await think.hook('payload_validate', this);\n    }\n  }\n  \n  /**\n   * normalize pathname, remove hack chars\n   * @param  {String} pathname []\n   * @return {String}          []\n   */\n  normalizePathname(pathname){\n    let length = pathname.length;\n    let i = 0, chr, result = [], value = '';\n    while(i < length){\n      chr = pathname[i++];\n      if(chr === '/' || chr === '\\\\'){\n        if(value && decodeURIComponent(value)[0] !== '.'){\n          result.push(value);\n        }\n        value = '';\n      }else{\n        value += chr;\n      }\n    }\n    if(value && decodeURIComponent(value) !== '.'){\n      result.push(value);\n    }\n    return result.join('/');\n  }\n  /*\n   * get or set config\n   * @param  {string} name  [config name]\n   * @param  {mixed} value [config value]\n   * @return {mixed}       []\n   */\n  config(name, value){\n    return think.config(name, value, this._config);\n  }\n  /**\n   * get or set content type\n   * @param  {String} ext [file ext]\n   * @return {}     []\n   */\n  type(contentType, encoding){\n    if (!contentType) {\n      return (this.headers['content-type'] || '').split(';')[0].trim();\n    }\n    if (this._contentTypeIsSend) {\n      return;\n    }\n    if (contentType.indexOf('/') === -1) {\n      contentType = mime.lookup(contentType);\n    }\n    if (encoding !== false && contentType.toLowerCase().indexOf('charset=') === -1) {\n      contentType += '; charset=' + (encoding || this.config('encoding'));\n    }\n    this.header('Content-Type', contentType);\n  }\n  /**\n   * get user agent\n   * @return {String} []\n   */\n  userAgent(){\n    return this.headers['user-agent'] || '';\n  }\n  /**\n   * get page request referrer\n   * @param  {String} host [only get referrer host]\n   * @return {String}      []\n   */\n  referrer(host){\n    let referer = this.headers.referer || this.headers.referrer || '';\n    if (!referer || !host) {\n      return referer;\n    }\n    let info = url.parse(referer);\n    return info.hostname;\n  }\n  /**\n   * check http method is get\n   * @return {Boolean} []\n   */\n  isGet(){\n    return this.method === 'GET';\n  }\n  /**\n   * check http method is post\n   * @return {Boolean} []\n   */\n  isPost(){\n    return this.method === 'POST';\n  }\n  /**\n   * is cli request\n   * @return {Boolean} []\n   */\n  isCli(){\n    return this._cli;\n  }\n  /**\n   * is ajax request\n   * @param  {String}  method []\n   * @return {Boolean}        []\n   */\n  isAjax(method) {\n    if (method && this.method !== method.toUpperCase()) {\n      return false;\n    }\n    return this.headers['x-requested-with'] === 'XMLHttpRequest';\n  }\n  /**\n   * is jsonp request\n   * @param  {String}  name [callback name]\n   * @return {Boolean}      []\n   */\n  isJsonp(name){\n    name = name || this.config('callback_name');\n    return !!this.get(name);\n  }\n  /**\n   * get or set get params\n   * @param  {String} name []\n   * @return {Object | String}      []\n   */\n  get(name, value){\n    if (value === undefined) {\n      if (name === undefined) {\n        return this._get;\n      }else if (think.isString(name)) {\n        //may be value is false or 0\n        value = this._get[name];\n        if(value === undefined){\n          value = '';\n        }\n        return value;\n      }\n      this._get = name;\n    }else{\n      this._get[name] = value;\n    }\n  }\n  /**\n   * get or set post params\n   * @param  {String} name []\n   * @return {Object | String}      []\n   */\n  post(name, value){\n    if (value === undefined) {\n      if (name === undefined) {\n        return this._post;\n      }else if (think.isString(name)) {\n        //may be value is false or 0\n        value = this._post[name];\n        if(value === undefined){\n          value = '';\n        }\n        return value;\n      }\n      this._post = name;\n    }else {\n      this._post[name] = value;\n    }\n  }\n  /**\n   * get post or get params\n   * @param  {String} name []\n   * @return {Object | String}      []\n   */\n  param(name){\n    if (name === undefined) {\n      return think.extend({}, this._get, this._post);\n    }\n    return this._post[name] || this._get[name] || '';\n  }\n  /**\n   * get or set file data\n   * @param  {String} name []\n   * @return {Object}      []\n   */\n  file(name, value){\n    if (value === undefined) {\n      if (name === undefined) {\n        return think.extend({}, this._file);\n      }\n      return think.extend({}, this._file[name]);\n    }\n    this._file[name] = value;\n  }\n  /**\n   * get or set header\n   * @param  {String} name  [header name]\n   * @param  {String} value [header value]\n   * @return {}       []\n   */\n  header(name, value){\n    if (name === undefined) {\n      return this.headers;\n    }else if (value === undefined) {\n      return this.headers[name.toLowerCase()] || '';\n    }\n    //check content type is send\n    if (name.toLowerCase() === 'content-type') {\n      if (this._contentTypeIsSend) {\n        return;\n      }\n      this._contentTypeIsSend = true;\n    }\n    //set header\n    if (!this.res.headersSent) {\n      this.res.setHeader(name, value);\n    }\n  }\n  /**\n   * set http status\n   * @param  {Number} status []\n   * @return {}        []\n   */\n  status(status = 200){\n    let res = this.res;\n    if (!res.headersSent) {\n      res.statusCode = status;\n    }\n    return this;\n  }\n  /**\n   * get uesr ip\n   * @return {String} [ip4 or ip6]\n   */\n  ip(forward){\n    let proxy = think.config('proxy_on') || this.host === this.hostname;\n    let userIP;\n    let localIP = '127.0.0.1';\n    if (proxy) {\n      if (forward) {\n        return (this.headers['x-forwarded-for'] || '').split(',').filter(item => {\n          item = item.trim();\n          if (think.isIP(item)) {\n            return item;\n          }\n        });\n      }\n      userIP = this.headers['x-real-ip'];\n    }else{\n      let connection = this.req.connection;\n      let socket = this.req.socket;\n      if (connection && connection.remoteAddress !== localIP) {\n        userIP = connection.remoteAddress;\n      }else if (socket && socket.remoteAddress !== localIP) {\n        userIP = socket.remoteAddress;\n      }\n    }\n    if (!userIP) {\n      return localIP;\n    }\n    if (userIP.indexOf(':') > -1) {\n      userIP = userIP.split(':').slice(-1)[0];\n    }\n    if (!think.isIP(userIP)) {\n      return localIP;\n    }\n    return userIP;\n  }\n  /**\n   * get or set language\n   * @return {String}           []\n   */\n  lang(lang, asViewPath){\n    if(lang){\n      this._lang = lang;\n      this._langAsViewPath = asViewPath;\n      return;\n    }\n    //get from property\n    if(this._lang){\n      return this._lang;\n    }\n    //get from cookie\n    let key = this.config('locale').cookie_name;\n    let value = this.cookie(key);\n    if(value){\n      this._lang = value;\n      return value;\n    }\n    //get from header\n    lang = this.header('accept-language');\n    //language to lowercase\n    this._lang = (lang.split(',')[0] || '').toLowerCase();\n    return this._lang;\n  }\n  /**\n   * get or set theme\n   * @param  {String} theme []\n   * @return {String}       []\n   */\n  theme(theme){\n    if(theme){\n      this._theme = theme;\n      return;\n    }\n    return this._theme;\n  }\n  /**\n   * get or set cookie\n   * @param  {} name    []\n   * @param  {} value   []\n   * @param  {} options []\n   * @return {}         []\n   */\n  cookie(name, value, options){\n    //send cookies\n    if (name === true) {\n      if (think.isEmpty(this._sendCookie)) {\n        return;\n      }\n      let cookies = Object.values(this._sendCookie).map((item) => {\n        return cookie.stringify(item.name, item.value, item);\n      });\n      this.header('Set-Cookie', cookies);\n      this._sendCookie = {};\n      return;\n    }\n    //parse cookie\n    if(think.isEmpty(this._cookie) && this.headers.cookie){\n      this._cookie = cookie.parse(this.headers.cookie);\n    }\n    if (name === undefined) {\n      return this._cookie;\n    }else if (value === undefined) {\n      return this._cookie[name] || this._sendCookie[name] && this._sendCookie[name].value || '';\n    }\n    //set cookie\n    if (typeof options === 'number') {\n      options = {timeout: options};\n    }\n    options = think.extend({}, this.config('cookie'), options);\n    if (value === null) {\n      options.timeout = -1000;\n    }\n    if (options.timeout !== 0) {\n      options.expires = new Date(Date.now() + options.timeout * 1000);\n    }\n    if(options.timeout > 0){\n      options.maxage = options.timeout;\n    }\n    options.name = name;\n    options.value = value;\n    this._sendCookie[name] = options;\n  }\n  /**\n   * redirect\n   * @param  {String} url  [redirect url]\n   * @param  {Number} code []\n   * @return {}      []\n   */\n  redirect(url, code){\n    this.res.statusCode = code || 302;\n    this.header('Location', url || '/');\n    this.end();\n  }\n  /**\n   * send time\n   * @param  {String} name [time type]\n   * @return {}      []\n   */\n  sendTime(name){\n    let time = Date.now() - this.startTime;\n    this.header('X-' + (name || 'EXEC-TIME'), time + 'ms');\n  }\n  /**\n   * output with success errno & errmsg\n   * @param  {Object} data    [output data]\n   * @param  {String} message [errmsg]\n   * @return {Promise}         [pedding promise]\n   */\n  success(data = '', message = ''){\n    let error = this.config('error');\n    let obj = {\n      [error.key]: 0,\n      [error.msg]: message,\n      data: data\n    };\n    this.type(this.config('json_content_type'));\n    this.end(obj);\n  }\n  /**\n   * output with fail errno & errmsg\n   * @param  {Number} errno  [error number]\n   * @param  {String} errmsg [error message]\n   * @param  {Object} data   [output data]\n   * @return {Promise}        [pedding promise]\n   */\n  fail(errno, errmsg = '', data = ''){\n    let obj;\n    let error = this.config('error');\n    if (think.isObject(errno)) {\n      obj = think.extend({}, errno);\n    }else{\n      if(/^[A-Z\\_]+$/.test(errno)){\n        let msg = this.locale(errno);\n        if(think.isArray(msg)){\n          errno = msg[0];\n          errmsg = msg[1];\n        }\n      }\n      if (!think.isNumber(errno)) {\n        data = errmsg;\n        errmsg = errno;\n        errno = error.default_errno;\n      }\n      //read errmsg from config/locale/[lang].js\n      if(!errmsg){\n        errmsg = this.locale(errno) || '';\n      }\n      obj = {\n        [error.key]: errno,\n        [error.msg]: errmsg\n      };\n      if(data){\n        obj.data = data;\n      }\n    }\n    this.type(this.config('json_content_type'));\n    this.end(obj);\n  }\n  /**\n   * output with jsonp\n   * @param  {Object} data [output data]\n   * @return {}      []\n   */\n  jsonp(data) {\n    this.type(this.config('json_content_type'));\n    let callback = this.get(this.config('callback_name'));\n    //remove unsafe chars\n    callback = callback.replace(/[^\\w\\.]/g, '');\n    if (callback) {\n      data = callback + '(' + (data !== undefined ? JSON.stringify(data) : '') + ')';\n    }\n    this.end(data);\n  }\n  /**\n   * output with json\n   * @param  {Object} data [output data]\n   * @return {Promise}      []\n   */\n  json(data){\n    this.type(this.config('json_content_type'));\n    this.end(data);\n  }\n  /**\n   * get view instance\n   * @return {Object} []\n   */\n  view(){\n    if (!this._view) {\n      let cls = think.require('view');\n      this._view = new cls(this);\n    }\n    return this._view;\n  }\n  /**\n   * set cache-control and expires header\n   * @return {} []\n   */\n  expires(time){\n    time = time * 1000;\n    let date = new Date(Date.now() + time);\n    this.header('Cache-Control', `max-age=${time}`);\n    this.header('Expires', date.toUTCString());\n  }\n  /**\n   * get locale value\n   * @param  {String} key []\n   * @return {String}     []\n   */\n  locale(){\n    return think.locale.apply(this, arguments);\n  }\n   /**\n   * get or set session\n   * @param  {String} name  [session name]\n   * @param  {mixed} value [session value]\n   * @return {Promise}       []\n   */\n  session(name, value) {\n    think.session(this);\n    let instance = this._session;\n    if (name === undefined) {\n      return instance.delete();\n    }\n    if (value !== undefined) {\n      return instance.set(name, value);\n    }\n    return instance.get(name);\n  }\n  /**\n   * write content\n   * @param  {mixed} obj      []\n   * @param  {String} encoding []\n   * @return {Promise}          []\n   */\n  write(obj, encoding = this.config('encoding')){\n    if(!this.res.connection){\n      return;\n    }\n    this.type(this.config('view.content_type'));\n    this.cookie(true);\n    if (obj === undefined) {\n      return;\n    }\n    if(think.isPromise(obj)){\n      //ignore Content-Type header before set\n      this._contentTypeIsSend = false;\n      throw new Error('can not write promise');\n    }\n    if (think.isArray(obj) || think.isObject(obj)) {\n      obj = JSON.stringify(obj);\n    }else if (!think.isBuffer(obj)) {\n      obj += '';\n    }\n    \n    //write after end\n    if(this._isEnd){\n      if(think.isBuffer(obj)){\n        think.log('write after end, content is buffer', 'WARNING');\n      }else{\n        let pos = obj.indexOf('\\n');\n        if(pos > -1){\n          obj = obj.slice(0, pos) + '...';\n        }\n        think.log('write after end, content is `' + obj + '`', 'WARNING');\n      }\n      return;\n    }\n    let outputConfig = this.config('output_content');\n    if (!outputConfig) {\n      return this.res.write(obj, encoding);\n    }\n    let fn = think.co.wrap(outputConfig);\n    let promise = fn(obj, encoding, this);\n    this._outputContentPromise.push(promise);\n  }\n  /**\n   * end\n   * @return {} []\n   */\n  _end(){\n    this.cookie(true);\n    this.res.end();\n    \n    process.nextTick(() => {\n      this._afterEnd();\n    });\n  }\n  /**\n   * after end\n   * @return {} []\n   */\n  _afterEnd(){\n    //flush session\n    if(this._session && this._session.flush){\n      this._session.flush();\n    }\n\n    //show request info\n    if(this.config('log_request') && !this._isResource){\n      think.log(colors => {\n        let msg = [\n          this.method, this.url,\n          colors.cyan(`${this.res.statusCode}`)\n        ].join(' ');\n        return msg;\n      }, 'HTTP', this.startTime);\n    }\n\n    //remove upload tmp files\n    if (!think.isEmpty(this._file)) {\n      var key, filepath;\n      for(key in this._file){\n        filepath = this._file[key].path;\n        if (think.isFile(filepath)) {\n          fs.unlink(filepath, () => {});\n        }\n      }\n    }\n  }\n  /**\n   * http end\n   * @return {} []\n   */\n  end(obj, encoding){\n    if(this._isEnd){\n      return;\n    }\n    if(this.timeoutTimer){\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = 0;\n    }\n    this.write(obj, encoding);\n    //set http end flag\n    this._isEnd = true;\n    if (!this._outputContentPromise.length) {\n      return this._end();\n    }\n\n    return Promise.all(this._outputContentPromise).then(() => {\n      this._outputContentPromise = [];\n      this._end();\n    }).catch(() => {\n      this._end();\n    });\n  }\n}\n"]}