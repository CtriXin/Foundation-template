{"version":3,"sources":["../../src/middleware/parse_template.js"],"names":["run","data","file","http","tpl_file","config","engine","type","Cls","think","adapter","instance","var","middleware","base"],"mappings":"AAAA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAME;;;;;mBAKAA,G,gBAAIC,I,EAAK;AACP,QAAIC,OAAOD,KAAKC,IAAhB;AACA,SAAKC,IAAL,CAAUC,QAAV,GAAqBF,IAArB;AACA,QAAIG,SAASJ,KAAKI,MAAL,IAAe,EAA5B;AACA,QAAIC,SAASD,OAAOE,IAAP,IAAe,KAAKF,MAAL,CAAY,WAAZ,CAAf,IAA2C,MAAxD;AACA,QAAIG,MAAMC,MAAMC,OAAN,CAAc,UAAd,EAA0BJ,MAA1B,CAAV;AACA,QAAIK,WAAW,IAAIH,GAAJ,EAAf;AACA,WAAOG,SAASX,GAAT,CAAaE,IAAb,EAAmBD,KAAKW,GAAxB,EAA6BP,MAA7B,CAAP;AACD,G;;;EAd0BI,MAAMI,UAAN,CAAiBC,I","file":"parse_template.js","sourcesContent":["'use strict';\n\n\n/**\n * parse template content\n * @param  {Object} \n * @return {Promise}         []\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @param  {Object} data [render template data]\n   * @return {Promise}      []\n   */\n  run(data){\n    let file = data.file;\n    this.http.tpl_file = file;\n    let config = data.config || {};\n    let engine = config.type || this.config('view.type') || 'base';\n    let Cls = think.adapter('template', engine);\n    let instance = new Cls();\n    return instance.run(file, data.var, config);\n  }\n}"]}