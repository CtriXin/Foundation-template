{"version":3,"sources":["../../src/middleware/parse_querystring_payload.js"],"names":["run","http","req","readable","contentType","type","indexOf","getPayload","then","_post","think","extend","parse","payload","middleware","base"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA;;;;;;AAEA;;;;;;;;;;;;AAKE;;;;mBAIAA,G,kBAAK;AACH,QAAIC,OAAO,KAAKA,IAAhB;;AAEA,QAAI,CAACA,KAAKC,GAAL,CAASC,QAAd,EAAwB;AACtB;AACD;;AAED,QAAIC,cAAcH,KAAKI,IAAL,EAAlB;AACA,QAAGD,eAAeA,YAAYE,OAAZ,CAAoB,mCAApB,MAA6D,CAAC,CAAhF,EAAkF;AAChF;AACD;;AAED,WAAOL,KAAKM,UAAL,GAAkBC,IAAlB,CAAuB,mBAAW;AACvCP,WAAKQ,KAAL,GAAaC,MAAMC,MAAN,CAAaV,KAAKQ,KAAlB,EAAyB,sBAAYG,KAAZ,CAAkBC,OAAlB,CAAzB,CAAb;AACA,aAAO,IAAP;AACD,KAHM,CAAP;AAID,G;;;EArB0BH,MAAMI,UAAN,CAAiBC,I","file":"parse_querystring_payload.js","sourcesContent":["'use strict';\n\nimport querystring from 'querystring';\n\n/**\n * parse json payload\n * @type {}\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @return {} []\n   */\n  run(){\n    let http = this.http;\n    \n    if (!http.req.readable) {\n      return;\n    }\n\n    let contentType = http.type();\n    if(contentType && contentType.indexOf('application/x-www-form-urlencoded') === -1){\n      return;\n    }\n    \n    return http.getPayload().then(payload => {\n      http._post = think.extend(http._post, querystring.parse(payload));\n      return null;\n    });\n  }\n}"]}