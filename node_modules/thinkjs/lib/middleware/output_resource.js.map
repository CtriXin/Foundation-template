{"version":3,"sources":["../../src/middleware/output_resource.js"],"names":["run","file","http","status","end","think","prevent","_isResource","contentType","lookup","type","range","header","outputNormal","outputRange","stream","createReadStream","pipe","res","on","size","statSync","match","slice","from","parseInt","to","Math","min","fd","openSync","buffer","Buffer","readSync","closeSync","middleware","base"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;AAKE;;;;mBAIAA,G,gBAAIC,I,EAAK;AACP;AACA,QAAGA,SAAS,KAAZ,EAAkB;AAChB;AACD;AACD,QAAIC,OAAO,KAAKA,IAAhB;AACA;AACA,QAAGD,SAAS,IAAZ,EAAiB;AACfC,WAAKC,MAAL,CAAY,GAAZ;AACAD,WAAKE,GAAL;AACA,aAAOC,MAAMC,OAAN,EAAP;AACD;AACD;AACAJ,SAAKK,WAAL,GAAmB,IAAnB;;AAEA,QAAIC,cAAc,eAAKC,MAAL,CAAYR,IAAZ,CAAlB;AACAC,SAAKQ,IAAL,CAAUF,WAAV,EAAuB,KAAvB;;AAEA,QAAIG,QAAQT,KAAKU,MAAL,CAAY,OAAZ,CAAZ;AACA,QAAG,CAACD,KAAJ,EAAU;AACR,aAAO,KAAKE,YAAL,CAAkBZ,IAAlB,CAAP;AACD;AACD,WAAO,KAAKa,WAAL,CAAiBb,IAAjB,EAAuBU,KAAvB,CAAP;AACD,G;AACD;;;;;;;mBAKAE,Y,yBAAaZ,I,EAAK;AAChB,QAAIC,OAAO,KAAKA,IAAhB;AACA,QAAIa,SAAS,aAAGC,gBAAH,CAAoBf,IAApB,CAAb;AACAc,WAAOE,IAAP,CAAYf,KAAKgB,GAAjB;AACAH,WAAOI,EAAP,CAAU,KAAV,EAAiB,YAAM;AACrBjB,WAAKE,GAAL;AACD,KAFD;AAGAW,WAAOI,EAAP,CAAU,OAAV,EAAmB,YAAM;AACvBjB,WAAKE,GAAL;AACD,KAFD;AAGA,WAAOC,MAAMC,OAAN,EAAP;AACD,G;AACD;;;;;;;;mBAMAQ,W,wBAAYb,I,EAAMU,K,EAAM;AACtB;AACA,QAAIS,OAAO,aAAGC,QAAH,CAAYpB,IAAZ,EAAkBmB,IAA7B;AACA,QAAIE,QAAQX,MAAMW,KAAN,CAAY,oBAAZ,CAAZ;AACA,QAAIC,QAAQ,IAAI,IAAJ,GAAW,IAAvB;AACA,QAAIC,OAAOC,SAASH,MAAM,CAAN,CAAT,KAAsB,CAAjC;AACA,QAAII,KAAKD,SAASH,MAAM,CAAN,CAAT,KAAsB,CAA/B;AACA,QAAG,CAACI,EAAJ,EAAO;AACLA,WAAKF,OAAOD,KAAP,GAAe,CAApB;AACD;AACDG,SAAKC,KAAKC,GAAL,CAASF,EAAT,EAAaN,OAAO,CAApB,CAAL;;AAEA,QAAIlB,OAAO,KAAKA,IAAhB;AACAA,SAAKC,MAAL,CAAY,GAAZ;AACAD,SAAKU,MAAL,CAAY,eAAZ,EAA6B,OAA7B;AACAV,SAAKU,MAAL,CAAY,eAAZ,aAAsCY,IAAtC,SAA8CE,EAA9C,SAAoDN,IAApD;;AAEA,QAAIS,KAAK,aAAGC,QAAH,CAAY7B,IAAZ,EAAkB,GAAlB,CAAT;AACA,QAAI8B,SAAS,IAAIC,MAAJ,CAAWN,KAAKF,IAAL,GAAY,CAAvB,CAAb;AACA,iBAAGS,QAAH,CAAYJ,EAAZ,EAAgBE,MAAhB,EAAwB,CAAxB,EAA2BL,KAAKF,IAAhC,EAAsCA,IAAtC;AACA,iBAAGU,SAAH,CAAaL,EAAb;AACA3B,SAAKE,GAAL,CAAS2B,MAAT;;AAEA,WAAO1B,MAAMC,OAAN,EAAP;AACD,G;;;EA5E0BD,MAAM8B,UAAN,CAAiBC,I","file":"output_resource.js","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport mime from 'mime';\n\n/**\n * output resource\n * @type {}\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @return {} []\n   */\n  run(file){\n    //not resource\n    if(file === false){\n      return;\n    }\n    let http = this.http;\n    //is resource but not exist\n    if(file === true){\n      http.status(404);\n      http.end();\n      return think.prevent();\n    }\n    //flag request is resource\n    http._isResource = true;\n\n    let contentType = mime.lookup(file);\n    http.type(contentType, false);\n\n    let range = http.header('range');\n    if(!range){\n      return this.outputNormal(file);\n    }\n    return this.outputRange(file, range);\n  }\n  /**\n   * output normal file\n   * @param  {String} file []\n   * @return {Promise}      []\n   */\n  outputNormal(file){\n    let http = this.http;\n    let stream = fs.createReadStream(file);\n    stream.pipe(http.res);\n    stream.on('end', () => {\n      http.end();\n    });\n    stream.on('error', () => {\n      http.end();\n    });\n    return think.prevent();\n  }\n  /**\n   * output range file\n   * @param  {String} file  []\n   * @param  {String} range []\n   * @return {Promise}       []\n   */\n  outputRange(file, range){\n    //request has range header\n    let size = fs.statSync(file).size;\n    let match = range.match(/bytes=(\\d+)\\-(\\d*)/);\n    let slice = 1 * 1024 * 1024;\n    let from = parseInt(match[1]) || 0;\n    let to = parseInt(match[2]) || 0;\n    if(!to){\n      to = from + slice - 1;\n    }\n    to = Math.min(to, size - 1);\n\n    let http = this.http;\n    http.status(206);\n    http.header('Accept-Ranges', 'bytes');\n    http.header('Content-Range', `bytes ${from}-${to}/${size}`);\n    \n    let fd = fs.openSync(file, 'r');\n    let buffer = new Buffer(to - from + 1);\n    fs.readSync(fd, buffer, 0, to - from, from);\n    fs.closeSync(fd);\n    http.end(buffer);\n\n    return think.prevent();\n  }\n}"]}